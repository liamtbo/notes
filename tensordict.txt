from tensordict.nn.distributions import NormalParamExtractor
    interprets first half as loc (mean) and second half of output as scale (sdev)

    >>> import torch
    >>> from tensordict.nn.distributions import NormalParamExtractor
    >>> from torch import nn
    >>> module = nn.Linear(3, 4)
    >>> normal_params = NormalParamExtractor()
    >>> tensor = torch.randn(3)
    >>> loc, scale = normal_params(module(tensor))
    >>> print(loc.shape, scale.shape)
    torch.Size([2]) torch.Size([2])
    >>> assert (scale > 0).all()

    >>> # with modules that return more than one tensor
    >>> module = nn.LSTM(3, 4)
    >>> tensor = torch.randn(4, 2, 3)
    >>> loc, scale, others = normal_params(*module(tensor))
    >>> print(loc.shape, scale.shape)
    torch.Size([4, 2, 2]) torch.Size([4, 2, 2])
    >>> assert (scale > 0).all()